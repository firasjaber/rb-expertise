### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Appointment {
  assurance: Assurance
  assuranceId: Int!
  createdAt: Date!
  date: Date!
  employee: Employee
  employeeId: Int!
  id: Int!
  location: String
  notes: String
  resolved: Boolean
  resolvedAt: Date
  title: String!
}

input AppointmentCreateInput {
  assuranceId: Int!
  date: Date!
  employeeId: Int!
  location: String!
  notes: String
  title: String!
}

input AppointmentResolveInput {
  id: Int!
  resolved: Boolean!
}

type Assurance {
  appointments: [Appointment]
  id: Int!
  name: String
  pictureUrl: String
  slug: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Employee {
  address: String
  appointments: [Appointment]
  birthDate: Date
  city: String
  createdAt: Date
  email: String
  endDate: Date
  firstName: String
  id: Int!
  isAdmin: Boolean
  lastName: String
  phone: String
  pictureUrl: String
  region: String
  startDate: Date
}

input EmployeeCreateInput {
  address: String!
  birthDate: Date!
  city: String!
  email: String!
  endDate: Date
  firstName: String!
  lastName: String!
  phone: String!
  pictureUrl: String
  region: String!
  startDate: Date!
}

input EmployeeUpdateInput {
  address: String!
  birthDate: Date!
  city: String!
  email: String!
  endDate: Date
  firstName: String!
  id: Int!
  lastName: String!
  phone: String!
  pictureUrl: String
  region: String!
  startDate: Date!
}

type Mission {
  address: String!
  assurance: Assurance
  assuranceContractNumber: String!
  assuranceId: Int!
  carHolderEmail: String!
  carHolderName: String!
  carHolderPhone: String!
  carRegistrationNumber: String!
  createdAt: Date!
  employee: Employee
  employeeId: Int!
  ends: Date!
  finished: Boolean!
  id: Int!
  repairAgencyEmail: String!
  repairAgencyName: String!
  repairAgencyPhone: String!
  repairAgencyResponsible: String!
  starts: Date!
  title: String!
}

input MissionCreateInput {
  address: String!
  assuranceContractNumber: String!
  assuranceId: Int!
  carHolderEmail: String!
  carHolderName: String!
  carHolderPhone: String!
  carRegistrationNumber: String!
  employeeId: Int!
  ends: Date!
  finished: Boolean
  repairAgencyEmail: String!
  repairAgencyName: String!
  repairAgencyPhone: String!
  repairAgencyResponsible: String!
  starts: Date!
  title: String!
}

input MissionResolveInput {
  finished: Boolean!
  id: Int!
}

type Mutation {
  """Create an Appoinment"""
  createAppointment(data: AppointmentCreateInput!): Appointment

  """Create a mission"""
  createMission(data: MissionCreateInput!): Mission

  """Create an Employee"""
  createOneEmployee(data: EmployeeCreateInput!): Employee

  """Delete an Employee by ID"""
  deleteOneEmployee(employeeId: Int!): Boolean

  """Resolve an Appointment"""
  resolveAppointment(data: AppointmentResolveInput!): Appointment

  """Resolve a Mission by changing status to finished"""
  resolveMission(data: MissionResolveInput!): Mission

  """Update an employee by ID"""
  updateOneEmployee(data: EmployeeUpdateInput!): Employee
}

type Query {
  """Get an appointment by ID"""
  appointment(appointmentId: Int!): Appointment

  """Get all Appointments"""
  appointments(searchQuery: String): [Appointment]

  """Get all Assurances Companies"""
  assurances: [Assurance]

  """Get an Employee by ID"""
  employee(employeeId: Int!): Employee

  """Get all Employees"""
  employees(searchQuery: String): [Employee]
  me: String

  """Get a single Mission by its ID"""
  mission(missionId: Int!): Mission

  """Get All Missions"""
  missions(searchQuery: String): [Mission]
}

type User {
  id: Int
  username: String
}

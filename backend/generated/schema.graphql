### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Appointment between client ,assurance and SEAT"""
type Appointment {
  """Appointment assigned assurance"""
  assurance: Assurance

  """Appointment assigned assurance id"""
  assuranceId: Int!

  """Appointment creation date"""
  createdAt: Date!

  """Appointment potential date"""
  date: Date!

  """Appointment assigned employee"""
  employee: Employee

  """Appointment assigned employee id"""
  employeeId: Int!

  """Appointment id"""
  id: Int!

  """Appointment description"""
  location: String

  """Appointment additional notes"""
  notes: String

  """Appointment current status"""
  resolved: Boolean

  """Appointment resolvation date"""
  resolvedAt: Date

  """Appointment title"""
  title: String!
}

input AppointmentCreateInput {
  assuranceId: Int!
  date: Date!
  employeeId: Int!
  location: String!
  notes: String
  title: String!
}

input AppointmentResolveInput {
  id: Int!
  resolved: Boolean!
}

"""Assurance company associated with SEAT"""
type Assurance {
  """appointments associated with correspending assurance company"""
  appointments: [Appointment]

  """Assurance Company ID"""
  id: Int!

  """Assurance company full name"""
  name: String

  """Assurance company picture url"""
  pictureUrl: String

  """Assurance Company Slug (Short Name)"""
  slug: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""SEAT Employee ( expert )"""
type Employee {
  """Employee address"""
  address: String

  """Appointment associeted with this Employee"""
  appointments: [Appointment]

  """Employee birth date"""
  birthDate: Date

  """Employee city"""
  city: String

  """Employee creation date"""
  createdAt: Date

  """Employee email"""
  email: String

  """Employee potention resigning date"""
  endDate: Date

  """Employee first name"""
  firstName: String

  """Employee id"""
  id: Int!

  """Employee role"""
  isAdmin: Boolean

  """Employee last name"""
  lastName: String

  """Employee phone number"""
  phone: String

  """Employee picture url"""
  pictureUrl: String

  """Employee Region"""
  region: String

  """Employee joining date"""
  startDate: Date
}

input EmployeeCreateInput {
  address: String!
  birthDate: Date!
  city: String!
  email: String!
  endDate: Date
  firstName: String!
  lastName: String!
  phone: String!
  pictureUrl: String
  region: String!
  startDate: Date!
}

input EmployeeUpdateInput {
  address: String!
  birthDate: Date!
  city: String!
  email: String!
  endDate: Date
  firstName: String!
  id: Int!
  lastName: String!
  phone: String!
  pictureUrl: String
  region: String!
  startDate: Date!
}

"""Missions associated between employee, assurance company, and SEAT"""
type Mission {
  address: String!
  assurance: Assurance
  assuranceContractNumber: String!
  assuranceId: Int!
  carHolderEmail: String!
  carHolderName: String!
  carHolderPhone: String!
  carRegistrationNumber: String!
  createdAt: Date!
  employee: Employee
  employeeId: Int!
  ends: Date!
  finished: Boolean!
  id: Int!
  repairAgencyEmail: String!
  repairAgencyName: String!
  repairAgencyPhone: String!
  repairAgencyResponsible: String!
  starts: Date!
  title: String!
}

input MissionCreateInput {
  address: String!
  assuranceContractNumber: String!
  assuranceId: Int!
  carHolderEmail: String!
  carHolderName: String!
  carHolderPhone: String!
  carRegistrationNumber: String!
  employeeId: Int!
  ends: Date!
  finished: Boolean
  repairAgencyEmail: String!
  repairAgencyName: String!
  repairAgencyPhone: String!
  repairAgencyResponsible: String!
  starts: Date!
  title: String!
}

input MissionResolveInput {
  finished: Boolean!
  id: Int!
}

type Mutation {
  """Create an Appoinment"""
  createAppointment(data: AppointmentCreateInput!): Appointment

  """Create a mission"""
  createMission(data: MissionCreateInput!): Mission

  """Create an Employee"""
  createOneEmployee(data: EmployeeCreateInput!): Employee

  """Delete an Employee by ID"""
  deleteOneEmployee(employeeId: Int!): Boolean

  """Resolve an Appointment"""
  resolveAppointment(data: AppointmentResolveInput!): Appointment

  """Resolve a Mission by changing status to finished"""
  resolveMission(data: MissionResolveInput!): Mission

  """Update an employee by ID"""
  updateOneEmployee(data: EmployeeUpdateInput!): Employee
}

type Query {
  """Get an appointment by ID"""
  appointment(appointmentId: Int!): Appointment

  """Get all Appointments"""
  appointments(active: Boolean, searchQuery: String): [Appointment]

  """Get all Assurances Companies"""
  assurances: [Assurance]

  """Get an Employee by ID"""
  employee(employeeId: Int!): Employee

  """Get all Employees"""
  employees(searchQuery: String): [Employee]

  """Get a single Mission by its ID"""
  mission(missionId: Int!): Mission

  """Get All Missions"""
  missions(active: Boolean, searchQuery: String): [Mission]
}
